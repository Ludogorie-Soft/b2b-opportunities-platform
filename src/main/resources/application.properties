spring.application.name=b2b-opportunities
server.port=8082

spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/${DB_TABLE_NAME:db-table-name}?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=${DB_USERNAME:your-db-user}
spring.datasource.password=${DB_PASSWORD:your-db-password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.yml

security.jwt.secret-key=${JWT_SECRET_KEY:your-jwt-key-here}
# 1h in millisecond
security.jwt.expiration-time=3600000

registration.token.expiration.time=3

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your-google-client-id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your-google-client-secret}

# /actuator/health
management.endpoint.health.show-details=always
springdoc.swagger-ui.path=/

# STORAGE
storage.url=${STORAGE_HOST:http://localhost:9000}
storage.accessKey=${STORAGE_USER:ACCESS_KEY}
storage.secretKey=${STORAGE_PASSWORD:SECRET_KEY}
storage.bucketName=${STORAGE_BUCKET_NAME:BUCKET_NAME}

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

frontend.address=${FRONTEND_HOST:http://localhost:8083}

email.service.url=${EMAIL_SERVICE_URL:http://localhost:8085/api/email/send}

spring.output.ansi.enabled=ALWAYS
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
spring.jackson.default-property-inclusion=non_null

# Email with all new/updated projects in the past 3 days that match any skill in all Enabled Company Filters.
cron.everyMondayAt9=${CRON_EVERY_MONDAY_AT_9}
#cron.everyMondayAt9=0 0 9 * * MON

# Email with all new/updated projects in the past 1 day that match any skill in all Enabled Company Filters (daily alerts).
cron.TuesdayToFridayAt9=${CRON_TUESDAY_TO_FRIDAY_AT_9}

# Email with all new/updated projects in the past week as a reminder to set skills/filters.
cron.companiesNoSkillsAndNoCustomFilters=${CRON_COMPANIES_NO_SKILLS_AND_NO_CUSTOM_FILTERS}

# This will send an email if a project is expiring in the next 2 days. It will also set the project to INACTIVE if not renewed.
cron.processExpiringProjects=${CRON_PROCESS_EXPIRING_PROJECTS}

domain=${DOMAIN_NAME:localhost}

management.zipkin.tracing.read-timeout=10s
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://${ZIPKIN_HOST:localhost}:9411/api/v2/spans

# TODO: to be deleted later on if no issues.
#management.zipkin.tracing.encoding=[JSON] # PROTO3
#management.zipkin.tracing.connect-timeout=1s
#spring.sleuth.sampler.probability=1.0
#spring.sleuth.enabled=true
#spring.sleuth.zipkin.enabled=true
#spring.zipkin.enabled=true
#spring.zipkin.service.name=b2b
#spring.zipkin.sender.type=web
#spring.zipkin.base-url=http://${ZIPKIN_HOST:localhost}
#logging.include-application-name=false
