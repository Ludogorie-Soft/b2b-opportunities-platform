services:
  db:
    image: postgres:16.4-alpine3.20
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_TABLE_NAME}
    volumes:
      - b2b_db_data:/var/lib/postgresql/data
      - ./icons:/icons
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - b2b-network
      
  backend:
    build:
      context: ..
      dockerfile: Deploy/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      DB_TABLE_NAME: ${DB_TABLE_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      STORAGE_HOST: http://minio:9000
      STORAGE_USER: ${STORAGE_USER}
      STORAGE_PASSWORD: ${STORAGE_PASSWORD}
      STORAGE_BUCKET_NAME: ${STORAGE_BUCKET_NAME}
      FRONTEND_HOST: http://localhost:8083 # This is a string that is used to redirect users to the frontend.
      EMAIL_SERVICE_URL: http://notifications:8085/api/email/send
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - b2b-network

  minio:
    image: 'bitnami/minio:latest'
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - b2b_minio_data:/bitnami/minio/data
    environment:
      MINIO_ROOT_USER: ${STORAGE_USER}
      MINIO_ROOT_PASSWORD: ${STORAGE_PASSWORD}
      MINIO_DEFAULT_BUCKETS: ${STORAGE_BUCKET_NAME}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - b2b-network

  mc:
    image: bitnami/minio-client:latest
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_SERVER_HOST: minio
      MINIO_SERVER_ACCESS_KEY: ${STORAGE_USER}
      MINIO_SERVER_SECRET_KEY: ${STORAGE_PASSWORD}
    entrypoint: >
      /bin/sh -c "
      sleep 10; 
      mc alias set myminio http://$${MINIO_SERVER_HOST}:9000 $${MINIO_SERVER_ACCESS_KEY} $${MINIO_SERVER_SECRET_KEY};
      mc anonymous set download myminio/company-assets;
      "
    networks:
      - b2b-network

  notifications:
    image: ludogoriesoft/b2b-notifications:v1
    environment:
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
    networks:
      - b2b-network

networks:
  b2b-network:
    driver: bridge
volumes:
  b2b_minio_data:
  b2b_db_data: