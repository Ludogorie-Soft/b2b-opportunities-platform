services:
  db:
    image: postgres:16.4-alpine3.20
    restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_TABLE_NAME}
    volumes:
      - ./db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    networks:
      - b2b-network
      
  backend:
    build:
      context: ..
      dockerfile: Deploy/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_HOST: db
      DB_TABLE_NAME: ${DB_TABLE_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/actuator/health" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - b2b-network
      
  frontend:
    build:
      context: .
      dockerfile: Dockerfile-frontend
    ports:
      - "8083:5173"
    depends_on:
      backend:
        condition: service_healthy
    networks:
          - b2b-network
          
networks:
  b2b-network:
    driver: bridge