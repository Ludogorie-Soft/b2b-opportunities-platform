name: Build, Test and Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - '**'
jobs:
  secret-generator:
    runs-on: ubuntu-latest
    outputs:
      db_username: ${{ steps.export-secrets.outputs.db_username }}
      db_password: ${{ steps.export-secrets.outputs.db_password }}
      test_db_table_name: ${{ steps.export-secrets.outputs.test_db_table_name }}

    steps:
      - name: Install Infisical CLI
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh' | sudo -E bash
          sudo apt update && sudo apt install -y infisical

      - name: Export environment variables from Infisical
        id: export-secrets
        env:
          INFISICAL_TOKEN: ${{ secrets.INFISICAL_TOKEN }}
        run: |
          infisical export --env=production | sed "s/'//g" > .env
          echo "db_username=$(grep DB_USERNAME .env | cut -d '=' -f2)" >> $GITHUB_OUTPUT
          echo "db_password=$(grep DB_PASSWORD .env | cut -d '=' -f2)" >> $GITHUB_OUTPUT
          echo "test_db_table_name=$(grep TEST_DB_TABLE_NAME .env | cut -d '=' -f2)" >> $GITHUB_OUTPUT

  build:
    needs: secret-generator
    name: Build, test and analysis
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ needs.secret-generator.outputs.db_username }}
          POSTGRES_PASSWORD: ${{ needs.secret-generator.outputs.db_password }}
          POSTGRES_DB: ${{ needs.secret-generator.outputs.test_db_table_name }}
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-2
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Install Infisical CLI
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.deb.sh' | sudo -E bash
          sudo apt update && sudo apt install -y infisical
      
      - name: Export environment variables from Infisical
        env:
          INFISICAL_TOKEN: ${{ secrets.INFISICAL_TOKEN }}
        run: infisical export --env=production | sed "s/'//g" > .env

      - name: Load environment variables (globally)
        run: cat .env >> $GITHUB_ENV
      
      - name: Build
        run: ./gradlew build --no-daemon

      - name: Test
        run: ./gradlew test --info --no-daemon jacocoTestReport

      - name: SonarCloud Analysis
        run: ./gradlew sonar --info --no-daemon
